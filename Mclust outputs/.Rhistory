set.seed(i)
print(i)
sol <- Mclust(temp, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
for (i in seq(i + 1, i+1)) {
set.seed(i)
print(i)
sol <- Mclust(temp, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
ll = -76364.21
for (i in seq(i + 1, i+1)) {
set.seed(i)
print(i)
sol <- Mclust(temp, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
ll = -76364.21
for (i in seq(i + 1, i+1)) {
set.seed(i)
print(i)
sol <- Mclust(temp, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
for (i in seq(i + 1, i+1)) {
set.seed(i)
print(i)
sol <- Mclust(temp, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
# create two random sample
sample1 <- df[seq(2, 8918, 5), ]
sample2 <- df[seq(3, 8918, 5), ]
ll = -100000
for (i in seq(i + 1, i+1)) {
set.seed(i)
print(i)
sol <- Mclust(temp, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
for (i in seq(i + 1, i+10)) {
set.seed(i)
print(i)
sol <- Mclust(temp, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
temp <- sample1
temp <- temp[, c(49:51, 53:56, 58:60)]
for (i in seq(i + 1, i+10)) {
set.seed(i)
print(i)
sol <- Mclust(temp, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
#############
temp <- df
temp <- df[df$Age > 17 & df$Age < 36 ,]
#############
temp <- df
temp <- temp[, c(49:51, 53:56, 58:60)]
i = 2500
ll = -100000
for (i in seq(i + 1, i + 100)) {
set.seed(i)
sample <- temp[sample(nrow(temp), 500, replace = TRUE), ]
print(i)
sol <- Mclust(sample, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print("BETTER value!")
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
print(sol$loglik)
}
ll = -100000
for (i in seq(i + 1, i + 100)) {
set.seed(i)
sample <- temp[sample(nrow(temp), 500, replace = TRUE), ]
print(i)
sol <- Mclust(sample, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print("BETTER value!")
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
ll = -100000
for (i in seq(i + 1, i + 100)) {
set.seed(i)
sample <- temp[sample(nrow(temp), 1500, replace = TRUE), ]
print(i)
sol <- Mclust(sample, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print("BETTER value!")
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
ll = -100000
for (i in seq(i + 1, i + 100)) {
set.seed(i)
sample <- temp[sample(nrow(temp), 1500, replace = TRUE), ]
print(i)
sol <- Mclust(sample, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print("BETTER value!")
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
temp <- sample1
temp <- temp[, c(50:51, 53:56, 58:60)]
# create two random sample
sample1 <- df[seq(1, 8918, 2), ]
sample2 <- df[seq(2, 8918, 2), ]
#############
ll = -100000
temp <- sample1
temp <- temp[, c(50:51, 53:56, 58:60)]
ll = -100000
set.seed(7)
for (i in seq(i + 1, i+10)) {
set.seed(i)
print(i)
sol <- Mclust(temp, G = 4)
if (ll == sol$loglik) {
print("same value!")
print(i)
print(count)
}
if (ll < sol$loglik) {
print(sol$loglik)
ll = sol$loglik
count = i
print(round(sol$parameters$mean, 2))
}
}
temp <- df
temp <- temp[, c(49:51, 53:56, 58:60)]
cor(temp)
round(cor(temp), 2)
View(df)
View(temp)
View(df)
for (s in seq(1, 10)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
typology <- function(data, n_groups, sample, seed = 1) {
#  setwd("C:\\Users\\owner\\Desktop\\Study 4\\Mclust outputs\\")
setwd('/Users/nimrodlevin/Desktop/Study 4/Mclust outputs')
# Get the optimal log-likelihood and total iterations so far
if (!file.exists(paste0('Optimal Likelihood/', seed))){
ll <- read.csv(paste0('Optimal Likelihood/', 0))[,-1]
} else {ll <- read.csv(paste0('Optimal Likelihood/', seed))[,-1]}
total_iterations = read.csv('total iterations')[, -1]
#  count numebr of iterations
i = 0
bestll = -10000000000; result$loglik == 0
mclust.options(hcUse = 'RND', subset = 20)
randpairs <- randomPairs(data, seed)
# run mclust to check for better solutions
while (i < 200) {
i = i + 1
print(paste0("Iteration #", i, " for sample #", sample, ' and groups = ', n_groups, ' (seed = ', seed, ')'))
result <- Mclust(data, G = n_groups, modelNames = 'EII', initialization = list(hcpairs = randpairs))
if (result$loglik >= ll[n_groups, sample]) {
# compute the difference for the new best ll compared to previous
ll[n_groups, sample + 6] = ll[n_groups, sample + 2]
ll[n_groups, sample + 2] = i
ll[n_groups, sample + 4] = (result$loglik-ll[n_groups, sample]) %>% round(2)
ll[n_groups, sample + 8] = result$modelName
ll[n_groups, sample + 10] = result$df
# save the new best results
bestll = result$loglik
ll[n_groups, sample] <- result$loglik %>% round(2) # update ll value in table
print(c("A new ll maximum = ", ll[n_groups, sample] %>% round(2)))
# Save new best results
best_save <- result$z %>% as.data.frame(); best_save <- cbind(best_save, result$classification, result$uncertainty)
print(summary(result))
}
}
# save new data for optimal ll + total iterations
write.csv(ll, file = paste0('Optimal Likelihood/', seed))
total_iterations[seed, (sample-1)*9 + n_groups - 1] = i
write.csv(total_iterations, file = 'total iterations')
# save the results only if there is a new optimal result
max <- read.csv('maximum loglikelihood')[-1]
if (bestll >= max[n_groups, sample]) {
write.csv(best_save, file = paste0('Clustering results/z and classificaiton for sample ', sample, ' with groups ', n_groups))
max[n_groups, sample] <- bestll %>% round(2)
max[n_groups, sample + 2] <- seed
write.csv(max, 'maximum loglikelihood')
}
}
####################      RELEVANT LIBRARIES AND WORKING DIRECTORY                ####################
remove(list = ls())
library(dplyr); library(mclust)
####################      LOAD TIDY FILES AND SUBSET FOR THE RELEVANT SAMPLE                ####################
cddq <- file.choose() %>% read.csv
# get only participants with RCA based in the USA
cddq <- cddq[!is.na(cddq$RCA) & cddq$Country == "USA", ]
# remove participants with no difference in responses
url <- file.choose(); source(url)
cddq <- cddq[!exclude(cddq[, c(49:51, 53:56, 58:60)]) == 0, ]; remove(url, exclude)
####################      CREATE TWO RANDOM SAMPLES                ####################
sample1 <- cddq[seq(1, nrow(cddq), by = 2), ]; sample1 <- sample1[, -1];
sample2 <- cddq[seq(2, nrow(cddq), by = 2), ]; sample2 <- sample2[, -1];
remove(cddq)
# get only the variables you need
sample1 <- (sample1[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
sample2 <- (sample2[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
####################      RUN MIXTURE MODEL CLUSTERING                ####################
# create ipsative scores for each participant
ipsative1 <- sample1[, 7:16] %>% t %>% scale %>% t %>% round(2) %>% as.data.frame()
ipsative2 <- sample2[, 7:16] %>% t %>% scale %>% t %>% round(2) %>% as.data.frame()
# get best estimate of loglikelihood from previous iteration
url <- file.choose(); source(url); remove(url)
for (s in seq(1, 10)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
results <- Mclust(ipsative, G = 2)
results <- Mclust(ipsative1, G = 2)
for (s in seq(1, 10)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
result <- Mclust(ipsative1, G = 2)
remove(results)
for (s in seq(1, 10)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(11, 20)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(21, 30)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(31, 35)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(36, 37)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(38, 50)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(51, 52)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(53, 53)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(54, 60)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(61, 65)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(66, 80)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(81, 100)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(101, 150)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(121, 130)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(131, 140)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(141, 150)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(144, 144)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(145, 150)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(151, 160)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(161, 175)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(167, 200)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(193, 200)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(201, 210)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(211, 250)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(245, 250)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(251, 270)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(271, 280)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
for (s in seq(281, 300)) { # number of random seeds
for (i in seq(2, 10)) { # number of groups
typology(data = ipsative1, n_groups = i, sample = 1, seed = s)
typology(data = ipsative2, n_groups = i, sample = 2, seed = s)
}
}
