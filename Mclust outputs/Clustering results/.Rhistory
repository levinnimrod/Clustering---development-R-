results[, i] =
# Extract the mean values of the variables for the clustering groups from sample 1
(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i]]), FUN = mean) %>% round(2) %>%
arrange(desc(total)) -
# then substract the mean values of the variables for the clustering groups from sample 2 (get the absolute values)
aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i + 9]]), FUN = mean) %>%
arrange(desc(total)))# %>% abs %>%
#    apply(2, max) %>% round(2)
}
###################      COMPUTE THE MEAN OF THE MAXIMUM DIFFERENCE BETWEEN SAMPLES ACROSS THE 10 SCORES                ####################
results = rep(NA, 12) %>% as.data.frame()
for (i in seq(9)) {
results[, i] =
# Extract the mean values of the variables for the clustering groups from sample 1
(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i]]), FUN = mean) %>% round(2) %>%
arrange(desc(total)) -
# then substract the mean values of the variables for the clustering groups from sample 2 (get the absolute values)
aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i + 9]]), FUN = mean) %>%
arrange(desc(total))) %>% abs %>%
apply(2, sum) %>% round(2)
}
results <- results[-1, ] %>% as.data.frame()
rownames(results) <- colnames(sample1[, 7:17]); colnames(results) <- c(seq(2, 10))
results
###################      COMPUTE THE MEAN OF THE MAXIMUM DIFFERENCE BETWEEN SAMPLES ACROSS THE 10 SCORES                ####################
results = rep(NA, 12) %>% as.data.frame()
for (i in seq(9)) {
results[, i] =
# Extract the mean values of the variables for the clustering groups from sample 1
(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i]]), FUN = mean) %>% round(2) %>%
arrange(desc(total)) -
# then substract the mean values of the variables for the clustering groups from sample 2 (get the absolute values)
aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i + 9]]), FUN = mean) %>%
arrange(desc(total))) %>% abs %>%
apply(2, mean) %>% round(2)
}
results <- results[-1, ] %>% as.data.frame()
rownames(results) <- colnames(sample1[, 7:17]); colnames(results) <- c(seq(2, 10))
results
results[1:10,] %>% colMeans() %>% round(2)
####################      EVALUATE THE MEAN DIFFERENCES - ALL 10 DIMENSIONS               ####################
names <- c(paste0('S1_G', 2:10), paste0('S2_G', 2:10))
# define which two solutions you want to compare (i = ?)
i = 3
# Extract the mean values of the variables for the clustering groups from sample 1
results = cbind(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i-1]]),
FUN = mean) %>% round(2), table(classifications[names[i-1]])) %>% arrange(desc(total)) %>% t
# Extract the mean values of the variables for the clustering groups from sample 2
results = results %>% cbind(cbind(aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i-1+9]]),
FUN = mean) %>% round(2), table(classifications[names[i-1+9]]))  %>% arrange(desc(total)) %>% t)
results[1, ] <- c(rep(1, i), rep(2, i)); results <- t(results) %>% as.data.frame;
results <- arrange(results, desc(total)) %>% t %>% as.data.frame();
results
results
x <- results
View(x)
###################      COMPUTE THE MEAN OF THE MAXIMUM DIFFERENCE BETWEEN SAMPLES ACROSS THE 10 SCORES                ####################
results = rep(NA, 12) %>% as.data.frame()
for (i in seq(9)) {
results[, i] =
# Extract the mean values of the variables for the clustering groups from sample 1
(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i]]), FUN = mean) %>% round(2) %>%
arrange(desc(total)) -
# then substract the mean values of the variables for the clustering groups from sample 2 (get the absolute values)
aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i + 9]]), FUN = mean) %>%
arrange(desc(total))) %>% abs %>%
apply(2, mean) %>% round(2)
}
results <- results[-1, ] %>% as.data.frame()
rownames(results) <- colnames(sample1[, 7:17]); colnames(results) <- c(seq(2, 10))
results
results[1:10,] %>% colMeans() %>% round(2)
# define which two solutions you want to compare (i = ?)
i = 2
# Extract the mean values of the variables for the clustering groups from sample 1
results = cbind(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i-1]]),
FUN = mean) %>% round(2), table(classifications[names[i-1]])) %>% arrange(desc(total)) %>% t
# Extract the mean values of the variables for the clustering groups from sample 2
results = results %>% cbind(cbind(aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i-1+9]]),
FUN = mean) %>% round(2), table(classifications[names[i-1+9]]))  %>% arrange(desc(total)) %>% t)
results[1, ] <- c(rep(1, i), rep(2, i)); results <- t(results) %>% as.data.frame;
results <- arrange(results, desc(total)) %>% t %>% as.data.frame();
x <- results; results
####################      EVALUATE THE MEAN DIFFERENCES - ALL 10 DIMENSIONS               ####################
names <- c(paste0('S1_G', 2:10), paste0('S2_G', 2:10))
# define which two solutions you want to compare (i = ?)
i = 2
# Extract the mean values of the variables for the clustering groups from sample 1
results = cbind(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i-1]]),
FUN = mean) %>% round(2), table(classifications[names[i-1]])) %>% arrange(desc(total)) %>% t
# Extract the mean values of the variables for the clustering groups from sample 2
results = results %>% cbind(cbind(aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i-1+9]]),
FUN = mean) %>% round(2), table(classifications[names[i-1+9]]))  %>% arrange(desc(total)) %>% t)
results[1, ] <- c(rep(1, i), rep(2, i)); results <- t(results) %>% as.data.frame;
results <- arrange(results, desc(total)) %>% t %>% as.data.frame();
x <- results; results
# define which two solutions you want to compare (i = ?)
i = 4
# Extract the mean values of the variables for the clustering groups from sample 1
results = cbind(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i-1]]),
FUN = mean) %>% round(2), table(classifications[names[i-1]])) %>% arrange(desc(total)) %>% t
# Extract the mean values of the variables for the clustering groups from sample 2
results = results %>% cbind(cbind(aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i-1+9]]),
FUN = mean) %>% round(2), table(classifications[names[i-1+9]]))  %>% arrange(desc(total)) %>% t)
results[1, ] <- c(rep(1, i), rep(2, i)); results <- t(results) %>% as.data.frame;
results <- arrange(results, desc(total)) %>% t %>% as.data.frame();
x <- results; results
# define which two solutions you want to compare (i = ?)
i = 5
# Extract the mean values of the variables for the clustering groups from sample 1
results = cbind(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i-1]]),
FUN = mean) %>% round(2), table(classifications[names[i-1]])) %>% arrange(desc(total)) %>% t
# Extract the mean values of the variables for the clustering groups from sample 2
results = results %>% cbind(cbind(aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i-1+9]]),
FUN = mean) %>% round(2), table(classifications[names[i-1+9]]))  %>% arrange(desc(total)) %>% t)
results[1, ] <- c(rep(1, i), rep(2, i)); results <- t(results) %>% as.data.frame;
results <- arrange(results, desc(total)) %>% t %>% as.data.frame();
x <- results; results
####################      RELEVANT LIBRARIES AND WORKING DIRECTORY                ####################
remove(list = ls())
library(dplyr); library(ggplot2); library(lsr);
####################      LOAD THE CLUSTERING SOLUTIONS                ####################
setwd(choose.dir())
files <- list.files()
ldf <- lapply(files, read.csv); remove(files)
####################      LOAD TIDY FILES AND SUBSET FOR THE RELEVANT SAMPLE                ####################
cddq <- read.csv('../../../df.csv')
# get only participants with RCA based in the USA
cddq <- cddq[!is.na(cddq$RCA) & cddq$Country == "USA", ]
# remove participants with no difference in responses
source('../../R Scripts/zero-variance validity check (function).R')
cddq <- cddq[!exclude(cddq[, c(49:51, 53:56, 58:60)]) == 0, ]; remove(exclude)
####################      CREATE TWO RANDOM SAMPLES                ####################
sample1 <- cddq[seq(1, nrow(cddq), by = 2), ]; sample1 <- sample1[, -1];
sample2 <- cddq[seq(2, nrow(cddq), by = 2), ]; sample2 <- sample2[, -1];
remove(cddq)
# get only the variables you need
sample1 <- (sample1[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
sample2 <- (sample2[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
####################      EXCTRACT CLASSIFICATIONS FROM THE SOLUTIONS                ####################
classifications = data.frame(rep(NA, nrow(ldf[[1]])))
uncertainty = data.frame(rep(NA, nrow(ldf[[1]])))
for (i in seq(18)){
classifications[i] = ldf[[i]]['result.classification']
#  uncertainty[i] = ldf[[i]]['result.uncertainty']
}
classifications <- cbind(classifications[,2:9], classifications[,1], classifications[,11:18], classifications[,10])
colnames(classifications) <- paste0("S", c(rep(1,9), rep(2, 9)), "_G", seq(2,10))
####################      EVALUATE THE MEAN DIFFERENCES - ALL 10 DIMENSIONS               ####################
names <- c(paste0('S1_G', 2:10), paste0('S2_G', 2:10))
# define which two solutions you want to compare (i = ?)
i = 4
# Extract the mean values of the variables for the clustering groups from sample 1
results = cbind(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i-1]]),
FUN = mean) %>% round(2), table(classifications[names[i-1]])) %>% arrange(desc(total)) %>% t
# Extract the mean values of the variables for the clustering groups from sample 2
results = results %>% cbind(cbind(aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i-1+9]]),
FUN = mean) %>% round(2), table(classifications[names[i-1+9]]))  %>% arrange(desc(total)) %>% t)
results[1, ] <- c(rep(1, i), rep(2, i)); results <- t(results) %>% as.data.frame;
results <- arrange(results, desc(total)) %>% t %>% as.data.frame();
x <- results; results
colnames(sample1)
df <- rbind(sample1, sample2)
df <- rbind(classifications$S1_G5, classifications$S2_G5) %>% cbind
df <- rbind(sample1, sample2)
df <- rbind(classifications$S1_G5, classifications$S2_G5) %>% cbind(, df)
df <- rbind(sample1, sample2)
df <- cbind(df, rbind(classifications$S1_G5, classifications$S2_G5))
df <- rbind(sample1, sample2)
y <- rbind(classifications$S1_G5, classifications$S2_G5)
y <- rbind(classifications$S1_G5, classifications$S2_G5) %>% as.data.frame()
y <- cbind(classifications$S1_G5, classifications$S2_G5) %>% as.data.frame()
y <- rbind(classifications$S1_G5, classifications$S2_G5) %>% as.data.frame()
View(y)
y <- rbind(classifications$S1_G5, classifications$S2_G5)
sample1 <- cbind(sample1, classifications$S1_G5)
sample2 <- cbind(sample2, classifications$S2_G5)
df <- rbind(sample1, sample2)
colnames(sample1)
colnames(sample2)
sample2 <- cbind(sample2, classifications$S2_G5); colnames(sample2) <- colnames(sample1)
df <- rbind(sample1, sample2)
sample1 <- cbind(sample1, classifications$S1_G5)
sample2 <- cbind(sample2, classifications$S2_G5); colnames(sample2) <- colnames(sample1)
sample1 <- cbind(sample1, classifications$S1_G5)
sample2 <- cbind(sample2, classifications$S2_G5); colnames(sample2) <- colnames(sample1)
####################      RELEVANT LIBRARIES AND WORKING DIRECTORY                ####################
remove(list = ls())
library(dplyr); library(ggplot2); library(lsr);
####################      LOAD THE CLUSTERING SOLUTIONS                ####################
setwd(choose.dir())
files <- list.files()
ldf <- lapply(files, read.csv); remove(files)
####################      LOAD TIDY FILES AND SUBSET FOR THE RELEVANT SAMPLE                ####################
cddq <- read.csv('../../../df.csv')
# get only participants with RCA based in the USA
cddq <- cddq[!is.na(cddq$RCA) & cddq$Country == "USA", ]
# remove participants with no difference in responses
source('../../R Scripts/zero-variance validity check (function).R')
cddq <- cddq[!exclude(cddq[, c(49:51, 53:56, 58:60)]) == 0, ]; remove(exclude)
####################      CREATE TWO RANDOM SAMPLES                ####################
sample1 <- cddq[seq(1, nrow(cddq), by = 2), ]; sample1 <- sample1[, -1];
sample2 <- cddq[seq(2, nrow(cddq), by = 2), ]; sample2 <- sample2[, -1];
remove(cddq)
# get only the variables you need
sample1 <- (sample1[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
sample2 <- (sample2[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
####################      EXCTRACT CLASSIFICATIONS FROM THE SOLUTIONS                ####################
classifications = data.frame(rep(NA, nrow(ldf[[1]])))
uncertainty = data.frame(rep(NA, nrow(ldf[[1]])))
for (i in seq(18)){
classifications[i] = ldf[[i]]['result.classification']
#  uncertainty[i] = ldf[[i]]['result.uncertainty']
}
classifications <- cbind(classifications[,2:9], classifications[,1], classifications[,11:18], classifications[,10])
colnames(classifications) <- paste0("S", c(rep(1,9), rep(2, 9)), "_G", seq(2,10))
####################      COMBINE DATA INTO ONE DF                ####################
sample1 <- cbind(sample1, classifications$S1_G5)
sample2 <- cbind(sample2, classifications$S2_G5); colnames(sample2) <- colnames(sample1)
df <- rbind(sample1, sample2)
df <- rbind(sample1, sample2); remove(sample1, sample2)
View(df)
####################      STANDARDIZE THE SOLUTIONS ACROSS SAMPLES                ####################
classifications$S1_G5 %>% table
?setnames
?setNames
map = setNames(c(1, 2, 3, 4, 5), c("B", "C", "A", "E", "D"))
map
foo[] <- map[unlist(classifications$S1_G5)]
x <- map[unlist(classifications$S1_G5)]
map = setNames(c("B", "C", "A", "E", "D"), c(1, 2, 3, 4, 5))
x <- map[unlist(classifications$S1_G5)]
classifications$S2_G5 %>% table
classifications$S2_G5 %>% table
classifications$S2_G5 %>% table
map = setNames(c("A", "C", "D", "E", "B"), c(1, 2, 3, 4, 5))
classifications$S2_G5 <- map[unlist(classifications$S2_G5)]
####################      STANDARDIZE THE SOLUTIONS ACROSS SAMPLES                ####################
classifications$S1_G5 %>% table
map = setNames(c("B", "C", "A", "E", "D"), c(1, 2, 3, 4, 5))
classifications$S1_G5 <- map[unlist(classifications$S1_G5)]
####################      STANDARDIZE THE SOLUTIONS ACROSS SAMPLES                ####################
classifications$S1_G5 %>% table
map = setNames(c("B", "C", "A", "E", "D"), c(1, 2, 3, 4, 5))
classifications$S1_G5 <- map[unlist(classifications$S1_G5)]
classifications$S2_G5 %>% table
map = setNames(c("A", "C", "D", "E", "B"), c(1, 2, 3, 4, 5))
classifications$S2_G5 <- map[unlist(classifications$S2_G5)]
classifications$S2_G5 %>% table
classifications$S2_G5 %>% table
classifications = data.frame(rep(NA, nrow(ldf[[1]])))
uncertainty = data.frame(rep(NA, nrow(ldf[[1]])))
for (i in seq(18)){
classifications[i] = ldf[[i]]['result.classification']
#  uncertainty[i] = ldf[[i]]['result.uncertainty']
}
classifications <- cbind(classifications[,2:9], classifications[,1], classifications[,11:18], classifications[,10])
colnames(classifications) <- paste0("S", c(rep(1,9), rep(2, 9)), "_G", seq(2,10))
####################      STANDARDIZE THE SOLUTIONS ACROSS SAMPLES                ####################
classifications$S1_G5 %>% table
map = setNames(c("B", "C", "A", "E", "D"), c(1, 2, 3, 4, 5))
classifications$S1_G5 <- map[unlist(classifications$S1_G5)]
classifications$S2_G5 %>% table
map = setNames(c("A", "C", "D", "E", "B"), c(1, 2, 3, 4, 5))
classifications$S2_G5 <- map[unlist(classifications$S2_G5)]
####################      STANDARDIZE THE SOLUTIONS ACROSS SAMPLES                ####################
classifications$S1_G5 %>% table
classifications$S2_G5 %>% table
sample1 <- cbind(sample1, classifications$S1_G5)
sample2 <- cbind(sample2, classifications$S2_G5); colnames(sample2) <- colnames(sample1)
files <- list.files()
ldf <- lapply(files, read.csv); remove(files)
####################      LOAD TIDY FILES AND SUBSET FOR THE RELEVANT SAMPLE                ####################
cddq <- read.csv('../../../df.csv')
# get only participants with RCA based in the USA
cddq <- cddq[!is.na(cddq$RCA) & cddq$Country == "USA", ]
# remove participants with no difference in responses
source('../../R Scripts/zero-variance validity check (function).R')
cddq <- cddq[!exclude(cddq[, c(49:51, 53:56, 58:60)]) == 0, ]; remove(exclude)
####################      CREATE TWO RANDOM SAMPLES                ####################
sample1 <- cddq[seq(1, nrow(cddq), by = 2), ]; sample1 <- sample1[, -1];
sample2 <- cddq[seq(2, nrow(cddq), by = 2), ]; sample2 <- sample2[, -1];
remove(cddq)
# get only the variables you need
sample1 <- (sample1[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
sample2 <- (sample2[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
####################      EXCTRACT CLASSIFICATIONS FROM THE SOLUTIONS                ####################
classifications = data.frame(rep(NA, nrow(ldf[[1]])))
uncertainty = data.frame(rep(NA, nrow(ldf[[1]])))
for (i in seq(18)){
classifications[i] = ldf[[i]]['result.classification']
#  uncertainty[i] = ldf[[i]]['result.uncertainty']
}
classifications <- cbind(classifications[,2:9], classifications[,1], classifications[,11:18], classifications[,10])
colnames(classifications) <- paste0("S", c(rep(1,9), rep(2, 9)), "_G", seq(2,10))
####################      STANDARDIZE THE SOLUTIONS ACROSS SAMPLES                ####################
classifications$S1_G5 %>% table
map = setNames(c("B", "C", "A", "E", "D"), c(1, 2, 3, 4, 5))
classifications$S1_G5 <- map[unlist(classifications$S1_G5)]
classifications$S2_G5 %>% table
map = setNames(c("A", "C", "D", "E", "B"), c(1, 2, 3, 4, 5))
classifications$S2_G5 <- map[unlist(classifications$S2_G5)]
####################      COMBINE DATA INTO ONE DF                ####################
sample1 <- cbind(sample1, classifications$S1_G5)
sample2 <- cbind(sample2, classifications$S2_G5); colnames(sample2) <- colnames(sample1)
df <- rbind(sample1, sample2); remove(sample1, sample2)
table(df$`classifications$S1_G5`)
####################      EVALUATE THE MEAN DIFFERENCES - ALL 10 DIMENSIONS               ####################
names <- c(paste0('S1_G', 2:10), paste0('S2_G', 2:10))
# define which two solutions you want to compare (i = ?)
i = 5
# Extract the mean values of the variables for the clustering groups from sample 1
results = cbind(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i-1]]),
FUN = mean) %>% round(2), table(classifications[names[i-1]])) %>% arrange(desc(total)) %>% t
# Extract the mean values of the variables for the clustering groups from sample 2
results = results %>% cbind(cbind(aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i-1+9]]),
FUN = mean) %>% round(2), table(classifications[names[i-1+9]]))  %>% arrange(desc(total)) %>% t)
results[1, ] <- c(rep(1, i), rep(2, i)); results <- t(results) %>% as.data.frame;
results <- arrange(results, desc(total)) %>% t %>% as.data.frame();
x <- results; results
####################      RELEVANT LIBRARIES AND WORKING DIRECTORY                ####################
remove(list = ls())
library(dplyr); library(ggplot2); library(lsr);
####################      LOAD THE CLUSTERING SOLUTIONS                ####################
setwd(choose.dir())
files <- list.files()
ldf <- lapply(files, read.csv); remove(files)
####################      LOAD TIDY FILES AND SUBSET FOR THE RELEVANT SAMPLE                ####################
cddq <- read.csv('../../../df.csv')
# get only participants with RCA based in the USA
cddq <- cddq[!is.na(cddq$RCA) & cddq$Country == "USA", ]
# remove participants with no difference in responses
source('../../R Scripts/zero-variance validity check (function).R')
cddq <- cddq[!exclude(cddq[, c(49:51, 53:56, 58:60)]) == 0, ]; remove(exclude)
####################      CREATE TWO RANDOM SAMPLES                ####################
sample1 <- cddq[seq(1, nrow(cddq), by = 2), ]; sample1 <- sample1[, -1];
sample2 <- cddq[seq(2, nrow(cddq), by = 2), ]; sample2 <- sample2[, -1];
remove(cddq)
# get only the variables you need
sample1 <- (sample1[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
sample2 <- (sample2[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
####################      EXCTRACT CLASSIFICATIONS FROM THE SOLUTIONS                ####################
classifications = data.frame(rep(NA, nrow(ldf[[1]])))
uncertainty = data.frame(rep(NA, nrow(ldf[[1]])))
for (i in seq(18)){
classifications[i] = ldf[[i]]['result.classification']
#  uncertainty[i] = ldf[[i]]['result.uncertainty']
}
classifications <- cbind(classifications[,2:9], classifications[,1], classifications[,11:18], classifications[,10])
colnames(classifications) <- paste0("S", c(rep(1,9), rep(2, 9)), "_G", seq(2,10))
####################      EVALUATE THE MEAN DIFFERENCES - ALL 10 DIMENSIONS               ####################
names <- c(paste0('S1_G', 2:10), paste0('S2_G', 2:10))
# define which two solutions you want to compare (i = ?)
i = 5
# Extract the mean values of the variables for the clustering groups from sample 1
results = cbind(aggregate(sample1[, 7:17], by = as.data.frame(classifications[names[i-1]]),
FUN = mean) %>% round(2), table(classifications[names[i-1]])) %>% arrange(desc(total)) %>% t
# Extract the mean values of the variables for the clustering groups from sample 2
results = results %>% cbind(cbind(aggregate(sample2[, 7:17], by = as.data.frame(classifications[names[i-1+9]]),
FUN = mean) %>% round(2), table(classifications[names[i-1+9]]))  %>% arrange(desc(total)) %>% t)
results[1, ] <- c(rep(1, i), rep(2, i)); results <- t(results) %>% as.data.frame;
results <- arrange(results, desc(total)) %>% t %>% as.data.frame();
x <- results; results
files <- list.files()
ldf <- lapply(files, read.csv); remove(files)
####################      LOAD TIDY FILES AND SUBSET FOR THE RELEVANT SAMPLE                ####################
cddq <- read.csv('../../../df.csv')
# get only participants with RCA based in the USA
cddq <- cddq[!is.na(cddq$RCA) & cddq$Country == "USA", ]
# remove participants with no difference in responses
source('../../R Scripts/zero-variance validity check (function).R')
cddq <- cddq[!exclude(cddq[, c(49:51, 53:56, 58:60)]) == 0, ]; remove(exclude)
####################      CREATE TWO RANDOM SAMPLES                ####################
sample1 <- cddq[seq(1, nrow(cddq), by = 2), ]; sample1 <- sample1[, -1];
sample2 <- cddq[seq(2, nrow(cddq), by = 2), ]; sample2 <- sample2[, -1];
remove(cddq)
# get only the variables you need
sample1 <- (sample1[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
sample2 <- (sample2[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
####################      EXCTRACT CLASSIFICATIONS FROM THE SOLUTIONS                ####################
classifications = data.frame(rep(NA, nrow(ldf[[1]])))
uncertainty = data.frame(rep(NA, nrow(ldf[[1]])))
for (i in seq(18)){
classifications[i] = ldf[[i]]['result.classification']
#  uncertainty[i] = ldf[[i]]['result.uncertainty']
}
classifications <- cbind(classifications[,2:9], classifications[,1], classifications[,11:18], classifications[,10])
colnames(classifications) <- paste0("S", c(rep(1,9), rep(2, 9)), "_G", seq(2,10))
####################      STANDARDIZE THE SOLUTIONS ACROSS SAMPLES                ####################
classifications$S1_G5 %>% table
map = setNames(c("B", "C", "A", "E", "D"), c(1, 2, 3, 4, 5))
classifications$S1_G5 <- map[unlist(classifications$S1_G5)]
classifications$S2_G5 %>% table
map = setNames(c("A", "C", "D", "E", "B"), c(1, 2, 3, 4, 5))
classifications$S2_G5 <- map[unlist(classifications$S2_G5)]
sample1 <- cbind(sample1, classifications$S1_G5)
sample2 <- cbind(sample2, classifications$S2_G5); colnames(sample2) <- colnames(sample1)
df <- rbind(sample1, sample2); remove(sample1, sample2)
table(df$`classifications$S1_G5`)
colnamesdf
colnames(df)
scale(df['Rm'])
scale(df['Rm']) %>% head
scale(df['Rm', 'Ri']) %>% head
scale(df[['Rm', 'Ri']]) %>% head
scale(df[c('Rm', 'Ri')]) %>% head
colnames(df)
scale(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')]) %>% head
scale(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')]) %>% round(2)
scale(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')]) %>% round(2)
scale(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')]) %>% round(2) %>% head
df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')] <- scale(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')]) %>% round(2)
View(df)
aggregate(df, by = as.data.frame(df$`classifications$S1_G5`), FUN = mean)
aggregate(df, by = as.data.frame(df$`classifications$S1_G5`), FUN = mean) %>% round(2)
aggregate(df, by = as.data.frame(df$`classifications$S1_G5`), FUN = mean)
aggregate(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')],
by = as.data.frame(df$`classifications$S1_G5`), FUN = mean)
aggregate(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')],
by = as.data.frame(df$`classifications$S1_G5`), FUN = mean) %>% round(2)
cddq <- read.csv('../../../df.csv')
# get only participants with RCA based in the USA
cddq <- cddq[!is.na(cddq$RCA) & cddq$Country == "USA", ]
# remove participants with no difference in responses
source('../../R Scripts/zero-variance validity check (function).R')
cddq <- cddq[!exclude(cddq[, c(49:51, 53:56, 58:60)]) == 0, ]; remove(exclude)
####################      CREATE TWO RANDOM SAMPLES                ####################
sample1 <- cddq[seq(1, nrow(cddq), by = 2), ]; sample1 <- sample1[, -1];
sample2 <- cddq[seq(2, nrow(cddq), by = 2), ]; sample2 <- sample2[, -1];
remove(cddq)
# get only the variables you need
sample1 <- (sample1[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
sample2 <- (sample2[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
####################      EXCTRACT CLASSIFICATIONS FROM THE SOLUTIONS                ####################
classifications = data.frame(rep(NA, nrow(ldf[[1]])))
uncertainty = data.frame(rep(NA, nrow(ldf[[1]])))
for (i in seq(18)){
classifications[i] = ldf[[i]]['result.classification']
#  uncertainty[i] = ldf[[i]]['result.uncertainty']
}
classifications <- cbind(classifications[,2:9], classifications[,1], classifications[,11:18], classifications[,10])
colnames(classifications) <- paste0("S", c(rep(1,9), rep(2, 9)), "_G", seq(2,10))
####################      STANDARDIZE THE SOLUTIONS ACROSS SAMPLES                ####################
classifications$S1_G5 %>% table
map = setNames(c("B", "C", "A", "E", "D"), c(1, 2, 3, 4, 5))
classifications$S1_G5 <- map[unlist(classifications$S1_G5)]
classifications$S2_G5 %>% table
map = setNames(c("A", "C", "D", "E", "B"), c(1, 2, 3, 4, 5))
classifications$S2_G5 <- map[unlist(classifications$S2_G5)]
####################      COMBINE DATA INTO ONE DF AND Z-SCORE THE 10 INDICATORS                ####################
sample1 <- cbind(sample1, classifications$S1_G5)
sample2 <- cbind(sample2, classifications$S2_G5); colnames(sample2) <- colnames(sample1)
df <- rbind(sample1, sample2); remove(sample1, sample2)
df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')] <- scale(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')])
aggregate(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')],
by = as.data.frame(df$`classifications$S1_G5`), FUN = mean)
aggregate(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')],
by = as.data.frame(df$`classifications$S1_G5`), FUN = mean)[-1]
aggregate(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')],
by = as.data.frame(df$`classifications$S1_G5`), FUN = mean)[-1] %>% round(2)
dat <- aggregate(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')],
by = as.data.frame(df$`classifications$S1_G5`), FUN = mean)[-1] %>% round(2)
dat
dat <- aggregate(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')],
by = as.data.frame(df$`classifications$S1_G5`), FUN = mean)
dat
dat <- aggregate(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')],
by = as.data.frame(df$`classifications$S1_G5`), FUN = mean)[-1] %>% round(2)
library(reshape2)
install.packages("reshape2")
library(reshape2)
dat
dat <- aggregate(df[c('Rm', 'Ri', 'Rd', 'Lp', 'Ls', 'Lo', 'La', 'Iu', 'Ii', 'Ie')],
by = as.data.frame(df$`classifications$S1_G5`), FUN = mean)
dat
means.long<-melt(dat,id.vars=`df$`classifications$S1_G5``)
?melt
means.long <- melt(dat, id.vars = `df$`classifications$S1_G5``)
means.long <- melt(dat, id.vars = df$`classifications$S1_G5`)
means.long <- melt(dat)
View(means.long)
dat <- melt(dat)
dat
library(ggplot2)
ggplot(dat,aes(x=variable,y=value,fill=factor(df$`classifications$S1_G5`)))+
geom_bar(stat="identity",position="dodge")+
scale_fill_discrete(name="Gender",
breaks=c(1, 2),
labels=c("Male", "Female"))+
xlab("Beverage")+ylab("Mean Percentage")
ggplot(dat,aes(x=variable,y=value,fill=factor(df$`classifications$S1_G5`)))
ggplot(data=dat, aes(x=variable, y=value)) +
geom_bar()
dat
g <- ggplot(data = dat, aes(x=variable, y = value))
g
dat
g +   geom_bar(stat="identity", width=0.5)
colnames(dat$`df$`classifications$S1_G5``) <- 'moder'
colnames(dat) <- 'moder'
dat
colnames(dat) <- c('moder', 'variable', 'value')
library(ggplot2)
g <- ggplot(data = dat, aes(x=variable, y = value, fill = ))
g +   geom_bar(stat="identity", width=0.5)
dat
g <- ggplot(data = dat, aes(x=variable, y = value, fill = moder))
g +   geom_bar(stat="identity", width=0.5)
g +   geom_bar(stat="identity", position=position_dodge(), width=0.5)
g +   geom_bar(stat="identity", position=position_dodge(), width=1.5)
g +   geom_bar(stat="identity", position=position_dodge(), width=1.0)
g +   geom_bar(stat="identity", position=position_dodge())
