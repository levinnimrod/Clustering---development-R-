results # Print the results (i.e., reliability and more)
#scores <- cbind(scores, results$score) # Extract the actual total score
## CHECK ALTERNIVE ORDER - EACH DIMENSION SEPERATELY, FIXED ORDER, NOT MIXED ITEMS
model_caas <- "
concern =~    CONC1 + CONT1 + CURI1 + CONF1 + CONC2 + CONT2
control =~    CURI2 + CONF2 + CONC3 + CONT3 + CURI3 + CONF3
curiosity =~  CONC4 + CONT4 + CURI4 + CONF4 + CONC5 + CONT5
confidence =~ CURI5 + CONF5 + CONC6 + CONT6 + CURI6 + CONF6
total =~ concern + confidence + control + curiosity
"
fit <- cfa(model_caas, data = mydata)
summary(fit, fit.measures=TRUE)
# Check reliability and compute mean for CONCERN
temp <- as.data.frame(cbind(mydata$CONC1, mydata$CONT1, mydata$CURI1, mydata$CONF1, mydata$CONC2,
mydata$CONT2, mydata$RCA))
round(cor(temp), digits = 2)
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = temp[, 1:6],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
control =~    CURI2 + CONF2 + CONC3 + CONT3 + CURI3 + CONF3
# Check reliability and compute mean for CONTROL
temp <- as.data.frame(cbind(mydata$CURI2, mydata$CONF2, mydata$CONC3, mydata$CONT3, mydata$CURI3,
mydata$CONF3, mydata$RCA))
round(cor(temp), digits = 2)
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = temp[, 1:6],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CURIOSITY
mydata$CONC4 <- as.numeric(mydata$CONC4); mydata$CONT4 <- as.numeric(mydata$CONT4);
mydata$CURI4 <- as.numeric(mydata$CURI4); mydata$CONF4 <- as.numeric(mydata$CONF4);
mydata$CONC5 <- as.numeric(mydata$CONC5); mydata$CONT5 <- as.numeric(mydata$CONT5);
mydata$RCA <- as.numeric(mydata$RCA)
temp <- as.data.frame(cbind(mydata$CONC4, mydata$CONT4, mydata$CURI4, mydata$CONF4, mydata$CONC5,
mydata$CONT5, mydata$RCA))
round(cor(temp), digits = 2)
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = temp[, 1:6],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CONFIDENCE
temp <- as.data.frame(cbind(mydata$CURI5, mydata$CONF5, mydata$CONC6, mydata$CONT6, mydata$CURI6,
mydata$CONF6, mydata$RCA))
round(cor(temp), digits = 2)
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = temp[, 1:6],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CDA
temp <- as.data.frame(cbind(mydata$IG1, mydata$LC1, mydata$PR1, mydata$SP1,
mydata$DO1, mydata$DP1, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("IG1", "IG2", "IG3", "LC1", "LC2", "LC3", "PR1", "PR2", "PR3",
"SP1", "SP2", "SP3", "DO1", "DO2", "DO3", "DP1", "DP2",
"DP3")
scaleKey <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
alpha(mydata[items])
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CAAS TOTAL
items <- c(paste0("CONC", 1:6), paste0("CONT", 1:6), paste0("CURI", 1:6),
paste0("CONF", 1:6))
scaleKey <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
scores <- cbind(scores, mydata$Difficulty)
scores <- cbind(scores, mydata$Stress)
colnames(scores) <- c("Order", "Gender", "Age", "RCA",
"IG", "IP", "LC", "EI", "PR", "SP", "CO", "DO", "DP", "AI", "WC", "IN",
"CONCERN", "CONTROL", "CURIOSITY", "CONFIDENCE", "CDA", "CAAS TOTAL",
"DIFFICULTY", "STRESS")
scores <- na.omit(as.data.frame(scores))
tempscores <- rbind(scores, tempscores)
tempp <- rbind(mydata, tempp)
tempscores$PR <- 8 - tempscores$PR
tempscores$DO <- 8 - tempscores$DO
tempscores$DP <- 8 - tempscores$DP
# create aggregate for difficulty and stress
tempscores$def <- (tempscores$DIFFICULTY + tempscores$STRESS) / 2
################################   ORDER 1 ORDER 1 ORDER 1 ORDER 1   ################################
# Imports the datafiles, which were saved on google sheets
library(gsheet)
mydata <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1-1k1t-uh_Mu3KEleirIg6BXV21948Q21crCCY8Ezg6s/edit?usp=sharing")
# choose only order 1 and create one row out of each two-row case
mydata <- mydata[(mydata$Order == 1), ]
n <- nrow(mydata)/2; mydata <- mydata[2*(1:n) - 1, ]
# choose only first-timers
mydata <- mydata[mydata$FirstTime == 2, ]
# Deletes cases with values out of range
for(i in 11:49) {
mydata <- mydata[!(mydata[, i] > 7), ]
}
for(i in 11:49) {
mydata <- mydata[!(mydata[, i] < 1), ]
}
for(i in 51:73) {
mydata <- mydata[!(mydata[, i] > 5), ]
}
for(i in 51:73) {
mydata <- mydata[!(mydata[, i] < 1), ]
}
mydata <- mydata[!is.na(mydata$RCA), ]
# Check appropriateness of the data
library(psych)
describe(mydata[, 11:49])
describe(mydata[, 51:74])
# select only USA participants
sort(table(mydata$Country))
mydata$Country[mydata$Country == "United"] <- "USA"
mydata$Country[mydata$Country == "United States"] <- "USA"
mydata$Country[mydata$Country == "US"] <- "USA"
mydata$Country[mydata$Country == "usa"] <- "USA"
mydata$Country[mydata$Country == "United States of America"] <- "USA"
mydata$Country[mydata$Country == "united states"] <- "USA"
mydata$Country[mydata$Country == "America"] <- "USA"
mydata$Country[mydata$Country == "U.S."] <- "USA"
mydata$Country[mydata$Country == "Usa"] <- "USA"
mydata$Country[mydata$Country == "United states"] <- "USA"
mydata$Country[mydata$Country == "us"] <- "USA"
sort(table(mydata$Country))
mydata <- mydata[mydata$Country == "USA", ]
mydata <- mydata[!is.na(mydata$RCA), ]
# Delete participants younger than 16 and older than 40
F_age = nrow(mydata)
mydata <- mydata[!(mydata$Age < 16), ]
mydata <- mydata[!(mydata$Age > 40), ]
F_age = F_age - nrow(mydata)
# Delete participants with inadequate validity item scores or reaction times
F_val = nrow(mydata)
mydata <- mydata[!(mydata$VAL1 < 3), ]
mydata <- mydata[!(mydata$VAL2 > 5), ]
F_val = F_val - nrow(mydata)
mydata <- mydata[!mydata$TimeCDMP < 90, ]
mydata <- mydata[!mydata$TimeCAAS < 60, ]
# add order Gender to the scores database
mydata <- mydata[!is.na(mydata$RCA), ]
scores <- mydata$Order
scores <- cbind(scores, mydata$Sex)
scores <- cbind(scores, mydata$Age)
scores <- cbind(scores, mydata$RCA)
scores <- as.data.frame(scores)
# Check reliability and compute mean for IG
temp <- as.data.frame(cbind(mydata$IG1, mydata$IG2, mydata$IG3, mydata$RCA, mydata$Difficulty, mydata$Stress))
round(cor(temp), digits = 2)
#mydata$IG1 <- 8 - mydata$IG1; mydata$IG2 <- 8 - mydata$IG2; mydata$IG3 <- 8 - mydata$IG3
# after reversal: higher-more information gathering
temp <- as.data.frame(cbind(mydata$IG1, mydata$IG2, mydata$IG3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("IG1", "IG2", "IG3")
scaleKey <- c(1, 1, 1)
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for IP
temp <- as.data.frame(cbind(mydata$IP1, mydata$IP2, mydata$IP3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("IP1", "IP2", "IP3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for LC
temp <- as.data.frame(cbind(mydata$LC1, mydata$LC2, mydata$LC3, mydata$RCA, mydata$Difficulty, mydata$Stress))
round(cor(temp), digits = 2)
mydata$LC1 <- 8 - mydata$LC1; mydata$LC2 <- 8 - mydata$LC2; mydata$LC3 <- 8 - mydata$LC3
# after reversal: more-internal locus of control
temp <- as.data.frame(cbind(mydata$LC1, mydata$LC2, mydata$LC3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("LC1", "LC2", "LC3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for EI
mydata$EI1 <- as.numeric(mydata$EI1); mydata$EI2 <- as.numeric(mydata$EI2);
mydata$EI3 <- as.numeric(mydata$EI3);
temp <- as.data.frame(cbind(mydata$EI1, mydata$EI2, mydata$EI3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("EI1", "EI2", "EI3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for PR
temp <- as.data.frame(cbind(mydata$PR1, mydata$PR2, mydata$PR3, mydata$RCA, mydata$Difficulty, mydata$Stress))
round(cor(temp), digits = 2)
mydata$PR1 <- 8 - mydata$PR1; mydata$PR2 <- 8 - mydata$PR2; mydata$PR3 <- 8 - mydata$PR3
# after reversal: higher score-less procrastination
temp <- as.data.frame(cbind(mydata$PR1, mydata$PR2, mydata$PR3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("PR1", "PR2", "PR3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for SP
mydata$SP1 <- as.numeric(mydata$SP1); mydata$SP2 <- as.numeric(mydata$SP2); mydata$SP3 <- as.numeric(mydata$SP3)
temp <- as.data.frame(cbind(mydata$SP1, mydata$SP2, mydata$SP3, mydata$RCA, mydata$Difficulty, mydata$Stress))
round(cor(temp), digits = 2)
mydata$SP1 <- 8 - mydata$SP1; mydata$SP2 <- 8 - mydata$SP2; mydata$SP3 <- 8 - mydata$SP3
#after reversal: more-faster
temp <- as.data.frame(cbind(mydata$SP1, mydata$SP2, mydata$SP3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("SP1", "SP2", "SP3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CO
temp <- as.data.frame(cbind(mydata$CO1, mydata$CO2, mydata$CO3, mydata$RCA))
round(cor(temp), digits = 2)
mydata$CO1 <- 8 - mydata$CO1; mydata$CO2 <- 8 - mydata$CO2; mydata$CO3 <- 8 - mydata$CO3
temp <- as.data.frame(cbind(mydata$CO1, mydata$CO2, mydata$CO3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("CO1", "CO2", "CO3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for DO
temp <- as.data.frame(cbind(mydata$DO1, mydata$DO2, mydata$DO3, mydata$RCA, mydata$Difficulty, mydata$Stress))
round(cor(temp), digits = 2)
mydata$DO1 <- 8 - mydata$DO1; mydata$DO2 <- 8 - mydata$DO2; mydata$DO3 <- 8 - mydata$DO3
temp <- as.data.frame(cbind(mydata$DO1, mydata$DO2, mydata$DO3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("DO1", "DO2", "DO3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for DP
mydata$DP1 <- as.numeric(mydata$DP1); mydata$DP2 <- as.numeric(mydata$DP2); mydata$DP3 <- as.numeric(mydata$DP3)
temp <- as.data.frame(cbind(mydata$DP1, mydata$DP2, mydata$DP3, mydata$RCA, mydata$Difficulty, mydata$Stress))
round(cor(temp), digits = 2)
mydata$DP1 <- 8 - mydata$DP1; mydata$DP2 <- 8 - mydata$DP2; mydata$DP3 <- 8 - mydata$DP3
temp <- as.data.frame(cbind(mydata$DP1, mydata$DP2, mydata$DP3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("DP1", "DP2", "DP3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for AI
temp <- as.data.frame(cbind(mydata$AI1, mydata$AI2, mydata$AI3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("AI1", "AI2", "AI3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for WC
temp <- as.data.frame(cbind(mydata$WC1, mydata$WC2, mydata$WC3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("WC1", "WC2", "WC3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for IN
temp <- as.data.frame(cbind(mydata$IN1, mydata$IN2, mydata$IN3, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("IN1", "IN2", "IN3")
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# CFA FOR CAAS
library(lavaan)
model_caas <- "
concern =~    CONC1 + CONC2 + CONC3 + CONC4 + CONC5 + CONC6
confidence =~ CONF1 + CONF2 + CONF3 + CONF4 + CONF5 + CONF6
control =~    CONT1 + CONT2 + CONT3 + CONT4 + CONT5 + CONT6
curiosity =~  CURI1 + CURI2 + CURI3 + CURI4 + CURI5 + CURI6
total =~ concern + confidence + control + curiosity
"
# Check reliability and compute mean for CONCERN
temp <- as.data.frame(cbind(mydata$CONC1, mydata$CONC2, mydata$CONC3, mydata$CONC4, mydata$CONC5,
mydata$CONC6, mydata$RCA))
round(cor(temp), digits = 2)
items <- c(paste0("CONC", 1:6))
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
#scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CONTROL
temp <- as.data.frame(cbind(mydata$CONT1, mydata$CONT2, mydata$CONT3, mydata$CONT4, mydata$CONT5,
mydata$CONT6, mydata$RCA))
round(cor(temp), digits = 2)
items <- c(paste0("CONT", 1:6))
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
#scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CURIOSITY
temp <- as.data.frame(cbind(mydata$CURI1, mydata$CURI2, mydata$CURI3, mydata$CURI4, mydata$CURI5,
mydata$CURI6, mydata$RCA))
round(cor(temp), digits = 2)
items <- c(paste0("CURI", 1:6))
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
#scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CONFIDENCE
temp <- as.data.frame(cbind(mydata$CONF1, mydata$CONF2, mydata$CONF3, mydata$CONF4, mydata$CONF5,
mydata$CONF6, mydata$RCA))
round(cor(temp), digits = 2)
items <- c(paste0("CONF", 1:6))
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
#scores <- cbind(scores, results$score) # Extract the actual total score
## CHECK ALTERNIVE ORDER - EACH DIMENSION SEPERATELY, FIXED ORDER, NOT MIXED ITEMS
model_caas <- "
concern =~    CONC1 + CONT1 + CURI1 + CONF1 + CONC2 + CONT2
control =~    CURI2 + CONF2 + CONC3 + CONT3 + CURI3 + CONF3
curiosity =~  CONC4 + CONT4 + CURI4 + CONF4 + CONC5 + CONT5
confidence =~ CURI5 + CONF5 + CONC6 + CONT6 + CURI6 + CONF6
total =~ concern + confidence + control + curiosity
"
fit <- cfa(model_caas, data = mydata)
summary(fit, fit.measures=TRUE)
# Check reliability and compute mean for CONCERN
temp <- as.data.frame(cbind(mydata$CONC1, mydata$CONT1, mydata$CURI1, mydata$CONF1, mydata$CONC2,
mydata$CONT2, mydata$RCA))
round(cor(temp), digits = 2)
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = temp[, 1:6],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
control =~    CURI2 + CONF2 + CONC3 + CONT3 + CURI3 + CONF3
# Check reliability and compute mean for CONTROL
temp <- as.data.frame(cbind(mydata$CURI2, mydata$CONF2, mydata$CONC3, mydata$CONT3, mydata$CURI3,
mydata$CONF3, mydata$RCA))
round(cor(temp), digits = 2)
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = temp[, 1:6],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CURIOSITY
mydata$CONC4 <- as.numeric(mydata$CONC4); mydata$CONT4 <- as.numeric(mydata$CONT4);
mydata$CURI4 <- as.numeric(mydata$CURI4); mydata$CONF4 <- as.numeric(mydata$CONF4);
mydata$CONC5 <- as.numeric(mydata$CONC5); mydata$CONT5 <- as.numeric(mydata$CONT5);
mydata$RCA <- as.numeric(mydata$RCA)
temp <- as.data.frame(cbind(mydata$CONC4, mydata$CONT4, mydata$CURI4, mydata$CONF4, mydata$CONC5,
mydata$CONT5, mydata$RCA))
round(cor(temp), digits = 2)
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = temp[, 1:6],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CONFIDENCE
temp <- as.data.frame(cbind(mydata$CURI5, mydata$CONF5, mydata$CONC6, mydata$CONT6, mydata$CURI6,
mydata$CONF6, mydata$RCA))
round(cor(temp), digits = 2)
scaleKey <- c(1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = temp[, 1:6],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CDA
temp <- as.data.frame(cbind(mydata$IG1, mydata$LC1, mydata$PR1, mydata$SP1,
mydata$DO1, mydata$DP1, mydata$RCA))
round(cor(temp), digits = 2)
items <- c("IG1", "IG2", "IG3", "LC1", "LC2", "LC3", "PR1", "PR2", "PR3",
"SP1", "SP2", "SP3", "DO1", "DO2", "DO3", "DP1", "DP2",
"DP3")
scaleKey <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
alpha(mydata[items])
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
# Check reliability and compute mean for CAAS TOTAL
items <- c(paste0("CONC", 1:6), paste0("CONT", 1:6), paste0("CURI", 1:6),
paste0("CONF", 1:6))
scaleKey <- c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1)
results <- scoreItems(keys = scaleKey, items = mydata[items],
totals = FALSE, missing = TRUE, impute = "none")
results # Print the results (i.e., reliability and more)
scores <- cbind(scores, results$score) # Extract the actual total score
scores <- cbind(scores, mydata$Difficulty)
scores <- cbind(scores, mydata$Stress)
colnames(scores) <- c("Order", "Gender", "Age", "RCA",
"IG", "IP", "LC", "EI", "PR", "SP", "CO", "DO", "DP", "AI", "WC", "IN",
"CONCERN", "CONTROL", "CURIOSITY", "CONFIDENCE", "CDA", "CAAS TOTAL",
"DIFFICULTY", "STRESS")
scores <- na.omit(as.data.frame(scores))
tempscores <- scores
tempp <- mydata
.44*.44
####################      RELEVANT LIBRARIES AND WORKING DIRECTORY                ####################
# Update date: 16-11-2020; 13-11-2020
remove(list = ls())
library(dplyr); library(ggplot2); library(lsr);
####################      LOAD THE CLUSTERING SOLUTIONS                ####################
setwd("C:\\Users\\owner\\Desktop\\Study 4\\Mclust outputs\\Clustering results")
files <- list.files()
ldf <- lapply(files, read.csv); remove(files)
####################      LOAD TIDY FILES AND SUBSET FOR THE RELEVANT SAMPLE                ####################
cddq <- read.csv('../../../df.csv')
# get only participants with RCA based in the USA
cddq <- cddq[!is.na(cddq$RCA) & cddq$Country == "USA", ]
# remove participants with no difference in responses
source('../../R Scripts/zero-variance validity check (function).R')
cddq <- cddq[!exclude(cddq[, c(49:51, 53:56, 58:60)]) == 0, ]; remove(exclude)
####################      CREATE TWO RANDOM SAMPLES                ####################
sample1 <- cddq[seq(1, nrow(cddq), by = 2), ]; sample1 <- sample1[, -1];
sample2 <- cddq[seq(2, nrow(cddq), by = 2), ]; sample2 <- sample2[, -1];
remove(cddq)
# get only the variables you need
sample1 <- (sample1[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
sample2 <- (sample2[, c(4:5, 8:11, 48:50, 52:55, 57:59, 61)]) %>% round(2)
####################      EXCTRACT CLASSIFICATIONS FROM THE SOLUTIONS                ####################
classifications = data.frame(rep(NA, nrow(ldf[[1]])))
uncertainty = data.frame(rep(NA, nrow(ldf[[1]])))
for (i in seq(18)){
classifications[i] = ldf[[i]]['result.classification']
#  uncertainty[i] = ldf[[i]]['result.uncertainty']
}
classifications <- cbind(classifications[,2:9], classifications[,1], classifications[,11:18], classifications[,10])
colnames(classifications) <- paste0("S", c(rep(1,9), rep(2, 9)), "_G", seq(2,10))
####################      ADJUST THE PROFILES FOR THE CORRECT ORDER                ####################
classifications$S1_G5 %>% table
map = setNames(c("D", "A", "B", "C", "E"), c(1, 2, 3, 4, 5))
classifications$S1_G5 <- map[unlist(classifications$S1_G5)]
classifications$S2_G5 %>% table
map = setNames(c("D", "C", "E", "B", "A"), c(1, 2, 3, 4, 5))
classifications$S2_G5 <- map[unlist(classifications$S2_G5)]
####################      CREATE AN AGGREGATED FILE WITH BOTH SAMPLES AND CLASSIFICATIONS               ####################
sample1$sample <- "A"; sample2$sample <- "B"
data <- rbind(sample1, sample2)
data$profile <- c(classifications$S1_G5, classifications$S2_G5)
####################      EVALUATE THE MEAN DIFFERENCES IN DIFFICULTY AND DISTRESS               ####################
# test if there is a main effect for sample or for profile
model <- aov(((data$Difficulty + data$Stress)/2) ~ data$sample * data$profile)
summary(model)
etaSquared(model, type = 2, anova = TRUE) %>% round(2)
model <- aov(((data$Difficulty + data$Stress)/2) ~ data$profile)
summary(model)
####################      EVALUATE THE MEAN DIFFERENCES IN RCA               ####################
# test if there is a main effect for sample or for profile
model <- aov(data$RCA ~ data$sample * data$profile)
summary(model)
# Sample A
temp <- data
data <- data[data$sample == 'A',]
aggregate(((data$Difficulty + data$Stress)/2),
by = as.data.frame(data$profile), FUN = mean)
model <- aov(((data$Difficulty + data$Stress)/2) ~ data$profile)
summary(model)
data <- temp
# Sample B
data <- data[data$sample == 'B',]
aggregate(((data$Difficulty + data$Stress)/2),
by = as.data.frame(data$profile), FUN = mean)
model <- aov(((data$Difficulty + data$Stress)/2) ~ data$profile)
summary(model)
data <- temp
# Sample A
temp <- data
data <- data[data$sample == 'A',]
aggregate(data$RCA,
by = as.data.frame(data$profile), FUN = mean)
model <- aov(data$RCA ~ data$profile)
summary(model)
data <- temp
# Sample B
data <- data[data$sample == 'B',]
aggregate(data$RCA,
by = as.data.frame(data$profile), FUN = mean)
model <- aov(data$RCA ~ data$profile)
summary(model)
data <- temp
# Sample A
temp <- data
data <- data[data$sample == 'A',]
data
data[data$RCA == 1]
data[data$RCA == 1, ]
data[data$RCA == 1, data$profile]
data[data$RCA == 1, ]
data[data$RCA == 1, ]
data$profile[data[data$RCA == 1, ]]
data$profile[data[data$RCA == 1]]
data$profile
data$profile[data$RCA == 1]
table(data$profile[data$RCA == 1])
chisq.test(data$profile, data$RCA)
install.packages("chisq.posthoc.test")
model <- chisq.test(data$profile, data$RCA)
chisq.posthoc.test(model)
library(chisq.posthoc.test)
chisq.posthoc.test(model)
chisq.posthoc.test(data$profile, data$RCA)
chisq.posthoc.test(table(data$profile, data$RCA))
